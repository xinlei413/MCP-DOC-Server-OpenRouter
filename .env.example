# Embedding Model Configuration
# Optional: Format is "provider:model_name" or just "model_name" for OpenAI (default)
# Examples:
#   - openai:text-embedding-3-small (default if no provider specified)
#   - vertex:text-embedding-004 (Google Cloud Vertex AI)
#   - gemini:gemini-embedding-exp-03-07 (Google Generative AI)
#   - aws:amazon.titan-embed-text-v1
#   - microsoft:text-embedding-ada-002
DOCS_MCP_EMBEDDING_MODEL=

# OpenAI Provider Configuration (Default)
# Required for OpenAI provider or as fallback
OPENAI_API_KEY=your-key-here
# Optional: Your OpenAI Organization ID
OPENAI_ORG_ID=
# Optional: Custom base URL for OpenAI-compatible APIs (e.g., Ollama, Azure OpenAI)
OPENAI_API_BASE=

# Google Cloud Vertex AI Configuration
# Required for vertex provider: Path to service account JSON key file
GOOGLE_APPLICATION_CREDENTIALS=/path/to/gcp-key.json

# Google Generative AI (Gemini) Configuration
# Required for gemini provider: Google API key
GOOGLE_API_KEY=your-google-api-key

# AWS Bedrock Configuration
# Required for aws provider
AWS_ACCESS_KEY_ID=your-aws-key
AWS_SECRET_ACCESS_KEY=your-aws-secret
AWS_REGION=us-east-1
# Optional: Use BEDROCK_AWS_REGION instead of AWS_REGION if needed
# BEDROCK_AWS_REGION=us-east-1

# Azure OpenAI Configuration
# Required for microsoft provider
AZURE_OPENAI_API_KEY=your-azure-key
AZURE_OPENAI_API_INSTANCE_NAME=your-instance
AZURE_OPENAI_API_DEPLOYMENT_NAME=your-deployment
AZURE_OPENAI_API_VERSION=2024-02-01

# Optional: Specify a custom directory to store the SQLite database file (documents.db).
# If set, this path takes precedence over the default locations.
# Default behavior (if unset):
# 1. Uses './.store/' in the project root if it exists (legacy).
# 2. Falls back to OS-specific data directory (e.g., ~/Library/Application Support/docs-mcp-server on macOS).
# DOCS_MCP_STORE_PATH=/path/to/your/desired/storage/directory
